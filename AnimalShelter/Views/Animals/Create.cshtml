@using AnimalShelter.Models;

@{
  Layout = "_Layout";
}

@model AnimalShelter.ViewModels.AnimalsCreateViewModel;
<div class="form">
  <h4>Add a new Animal</h4>
  @using (Html.BeginForm())
  {
    <div class="form-group">
      @Html.LabelFor(model => model.Name)
      @Html.TextBoxFor(model => model.Name,new { @class = "form-control" })
    </div>
    <div class="form-group">
      @Html.LabelFor(model => model.Gender)
      @Html.DropDownList("Gender",new List<SelectListItem> {
    new SelectListItem { Text = "Male", Value = "Male" } ,
    new SelectListItem { Text = "Female", Value = "Female" },
    },new { @class = "form-control" })
    </div>
    <div class="form-group">
      @Html.LabelFor(model => model.Breed)
      @Html.DropDownList("Breed",@Model.BreedList,new { @class = "form-control" })
    </div>
    <div class="form-group">
      @Html.Label("New Breed")
      @Html.TextBox("newbreed",null, new { @class = "form-control" })
    </div>
    <div class="form-group">
      @Html.LabelFor(model => model.Type)
      @Html.DropDownList("Type",@Model.TypeList, new { @class = "form-control" })
    </div>
    <div>
      @Html.Label("New Type")
      @Html.TextBox("newtype",null, new { @class = "form-control"})
    </div>
    <input type="submit" value="Add new Animal" class="btn btn-success" />
  }
  <p>@Html.ActionLink("Return to home", "Index", "Home")</p>
</div>
